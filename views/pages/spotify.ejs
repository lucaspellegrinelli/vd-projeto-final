<%- contentFor("body") %>

<span class="title is-size-3 is-block">Pequenos Múltiplos do Spotify (WIP)</span>

WIP<br>

<button id="change-dataset-button" class="button">Change dataset</button>
<div id="chart-container"></div>

<script>
  const readJsonFile = (path) => {
    const contents = $.ajax({type: "GET", url: path, async: false}).responseText;
    return JSON.parse(contents);
  };

  const artistColor = (artistIndex) => artistIndex == 0 ? PINK : BLUE;

  const getChartData = (rawData, artistIndex) => {
    return {
      labels: rawData.labels,
      datasets: [
        {
          data: rawData.meanFeatures,
          backgroundColor: "rgba(0,0,0,0)",
          borderColor: "black",
          borderWidth: { right: 3 },
          barPercentage: 1.0,
          grouped: false,
          label: "average",
        },
        {
          data: rawData.artists[artistIndex].features,
          backgroundColor: artistColor(artistIndex),
          barPercentage: 0.6,
          label: rawData.artists[artistIndex].name,
        },
      ],
    }
  };

  const drawMainChart = (rawData, context, artistIndex) => {
    const data = getChartData(rawData, artistIndex);
    const options = {
      indexAxis: "y",
      plugins: {
        title: {
          display: true,
          text: rawData.artists[artistIndex].name,
          font: { size: 16 },
        },
        legend: { display: false }
      }
    };
    return new Chart(context, { type: "bar", data, options });
  };

  const drawSmallChart = (rawData, context, artistIndex) => {
    const data = getChartData(rawData, artistIndex);
    const options = {
        aspectRatio: 1.25,
        indexAxis: "y",
        scales: {
          x: { display: false },
          y: { display: false },
        },
        plugins: {
          title: {
            display: true,
            padding: 0,
            text: rawData.artists[artistIndex].name,
            font: { size: 12 }
          },
          legend: { display: false }
        }
    };
    return new Chart(context, { type: "bar", data, options });
  };

  const loadCharts = (dataPath) => {
    const rawData = readJsonFile(dataPath);

    let container = document.getElementById("chart-container");
    container.innerHTML = "";

    // Colocando o gráfico do BTS
    let canvas = document.createElement("canvas");
    canvas.height = 110;
    canvas.className = "mb-6 main-chart";
    container.appendChild(canvas);
    const mainChart = drawMainChart(rawData, canvas.getContext("2d"), 0);

    // Colocando os gráficos dos outros artistas
    const ROW_SIZE = 5;
    const numberRows = Math.ceil(rawData.artists.length / ROW_SIZE);
    const allRows = [];
    for (let i = 0; i < numberRows; i++) {
      const row = document.createElement("div");
      row.className = "columns is-flex is-justify-content-center";
      container.appendChild(row);
      allRows.push(row);
    }
    for (let i = 1; i < rawData.artists.length; i++) {
      const rowIndex = Math.floor((i - 1) / ROW_SIZE);

      const canvasHolder = document.createElement("div");
      canvasHolder.className = "column is-2 p-1 mb-3";
      let canvas = document.createElement("canvas");
      canvas.setAttribute("style", "border:1px solid gray;");
      canvas.className = "mt-1 py-1";
      canvasHolder.appendChild(canvas);

      drawSmallChart(rawData, canvas.getContext("2d"), i);

      allRows[rowIndex].appendChild(canvasHolder);
    }
  };
  loadCharts("/json/kpop-artist-features.json");

  let currentDataset = 0;
  document.getElementById("change-dataset-button").onclick = () => {
    const newDataset = ([1, 0])[currentDataset];
    const datasets = [
      "/json/kpop-artist-features.json",
      "/json/general-artist-features.json",
    ];
    loadCharts(datasets[newDataset]);
    currentDataset = newDataset;
  };
</script>
